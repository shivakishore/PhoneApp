<?xml version="1.0" encoding="utf-8"?>
<layout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    xmlns:tools="http://schemas.android.com/tools"
    tools:context=".ui.MainActivity">

    <data>

        <variable
            name="vm"
            type="com.shiva.phoneapp.ui.CallViewModel" />

        <import type="android.telecom.Connection" />

        <import type="android.view.View" />
    </data>

    <androidx.constraintlayout.widget.ConstraintLayout
        android:layout_width="match_parent"
        android:layout_height="match_parent">

        <TextView
            android:id="@+id/status"
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:text="@{vm.callState == Connection.STATE_RINGING ? @string/ringing : vm.callState == Connection.STATE_ACTIVE ? @string/active : vm.callState == Connection.STATE_DISCONNECTED ? @string/disconnected : vm.callState == Connection.STATE_HOLDING ? @string/onHold :@string/nocall }"
            app:layout_constraintBottom_toTopOf="@+id/guideline3"
            app:layout_constraintLeft_toLeftOf="parent"
            app:layout_constraintRight_toRightOf="parent"
            app:layout_constraintTop_toTopOf="parent" />

        <Button
            android:id="@+id/accept"
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:layout_marginStart="32dp"
            android:onClick="@{()->vm.acceptCall()}"
            android:text="@string/accept"
            android:visibility="@{vm.callState == Connection.STATE_RINGING ? View.VISIBLE : View.GONE}"
            app:layout_constraintBottom_toBottomOf="parent"
            app:layout_constraintEnd_toEndOf="parent"
            app:layout_constraintHorizontal_bias="0.0"
            app:layout_constraintStart_toStartOf="@+id/guideline2"
            app:layout_constraintTop_toTopOf="@+id/guideline3" />

        <Button
            android:id="@+id/reject"
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:layout_marginEnd="32dp"
            android:onClick="@{()->vm.rejectCall()}"
            android:text="@string/reject"
            android:visibility="@{vm.callState == Connection.STATE_RINGING ? View.VISIBLE : View.GONE}"
            app:layout_constraintBottom_toBottomOf="parent"
            app:layout_constraintEnd_toStartOf="@+id/guideline2"
            app:layout_constraintHorizontal_bias="1.0"
            app:layout_constraintStart_toStartOf="parent"
            app:layout_constraintTop_toTopOf="@+id/guideline3" />

        <!--        In general Need to check if there is any other call going on when on hold-->
        <Button
            android:id="@+id/bt_disconnect"
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:onClick="@{()->vm.disconnectCall()}"
            android:text="@string/disconnect"
            android:visibility="@{(vm.callState == Connection.STATE_ACTIVE || vm.callState == Connection.STATE_HOLDING) ? View.VISIBLE : View.GONE}"
            app:layout_constraintBottom_toBottomOf="parent"
            app:layout_constraintEnd_toStartOf="@+id/guideline2"
            app:layout_constraintStart_toStartOf="@+id/guideline2"
            app:layout_constraintTop_toTopOf="@+id/guideline3" />

        <androidx.constraintlayout.widget.Guideline
            android:id="@+id/guideline2"
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:orientation="vertical"
            app:layout_constraintGuide_percent=".5" />

        <androidx.constraintlayout.widget.Guideline
            android:id="@+id/guideline3"
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:orientation="horizontal"
            app:layout_constraintGuide_percent="0.5" />

        <Button
            android:id="@+id/button"
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:onClick="@{()->vm.mergeCalls()}"
            android:text="@string/merge"
            android:visibility="@{(vm.callState == Connection.STATE_HOLDING) ? View.VISIBLE : View.GONE}"
            app:layout_constraintBottom_toTopOf="@+id/bt_disconnect"
            app:layout_constraintEnd_toStartOf="@+id/guideline2"
            app:layout_constraintStart_toStartOf="@+id/guideline2"
            app:layout_constraintTop_toTopOf="@+id/guideline3" />
    </androidx.constraintlayout.widget.ConstraintLayout>
</layout>
